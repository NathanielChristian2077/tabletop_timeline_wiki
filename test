import java.time.LocalDate;
import me.modelo.entidades.*;
import me.modelo.enums.*;
import me.controle.*;

public class DemoRPG {

    public static void main(String[] args) throws Exception {
        // Gerenciadores
        GerenciadorUsuario gu = new GerenciadorUsuario();
        GerenciadorCampanha gc = new GerenciadorCampanha();
        GerenciadorEvento ge = new GerenciadorEvento();
        GerenciadorPersonagem gp = new GerenciadorPersonagem();
        GerenciadorNota gn = new GerenciadorNota();

        // Criar usuários
        Usuario alice = new Usuario("Alice", "mestre123", TipoUsuario.MESTRE);
        Usuario bob = new Usuario("Bob", "jogador456", TipoUsuario.JOGADOR);
        gu.adicionarUsuario(alice);
        gu.adicionarUsuario(bob);

        // Criar campanha e evento
        gc.criarCampanha("Crônicas de Aether", "Campanha steampunk épica", alice);
        Campanha campanha = gc.buscarCampanhaPorNome("Crônicas de Aether");

        Evento chegada = ge.criarEvento("A Chegada", "A nave aterrissa no pátio", LocalDate.now());
        campanha.adicionarEvento(chegada);

        // Criar e associar personagens
        Personagem annah = new Personagem("Annah de Bronze");
        Personagem dorn = new Personagem("Dorn, o Silente");
        gp.adicionar(annah);
        gp.adicionar(dorn);
        chegada.adicionarPersonagem(annah);
        chegada.adicionarPersonagem(dorn);

        // Jogador Bob escreve nota privada
        Nota notaBob = gn.criarNota("Anotações Mentais", "Suspeito do capitão...", LocalDate.now(), TipoNota.PRIVADA, bob);

        // Tentativa de Alice remover nota de Bob (deve falhar)
        try {
            gn.remover(notaBob.getId(), alice);
        } catch (Exception e) {
            System.out.println("Falha esperada: " + e.getMessage());
        }

        // Listagem de notas visíveis para Bob
        System.out.println("\nNotas visíveis para Bob:");
        for (Nota n : gn.listarVisiveisPara(bob)) {
            System.out.println("• " + n.resumo());
        }

        // Listagem de eventos da campanha
        System.out.println("\nEventos da campanha:");
        for (Evento e : campanha.getEventos()) {
            System.out.println("• " + e.getTitulo() + " com personagens: " +
                e.getPersonagensRelacionados().stream().map(Personagem::getNome).toList());
        }
    }
}